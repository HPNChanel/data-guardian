[tool.poetry]
name = "dg-core"
version = "0.1.0"
description = "DG Core: secure data scanning, redaction, and IPC services"
authors = ["Data Guardian Team <devs@example.com>"]
readme = "README.md"
license = "Apache-2.0"
packages = [{ include = "dg_core", from = "src" }]
keywords = ["pii", "redaction", "security", "json-rpc", "ipc"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Topic :: Security",
  "Topic :: Text Processing"
]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.7.0"
typer = { version = "^0.12.3", extras = ["all"] }
PyYAML = "^6.0.1"
regex = "^2024.5.15"
structlog = "^24.1.0"
platformdirs = "^4.2.0"
anyio = "^4.3.0"
udatetime = "^2.1.0"
uvloop = { version = "^0.19.0", markers = "sys_platform != 'win32'" }
pywin32 = { version = "^306", markers = "sys_platform == 'win32'" }
pendulum = "^3.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-asyncio = "^0.23.7"
pytest-cov = "^5.0.0"
pytest-benchmark = "^4.0.0"
hypothesis = "^6.100.0"
coverage = "^7.5.0"
mypy = "^1.9.0"
ruff = "^0.5.0"
pre-commit = "^3.6.0"

[tool.poetry.extras]
win = ["pywin32"]
uv = ["uvloop"]

[tool.poetry.scripts]
dg = "dg_core.cli.main:app"

data_guardian-dg = "dg_core.cli.main:app"

[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "-ra --strict-config --strict-markers"
testpaths = ["tests"]
markers = [
  "bench: Benchmark tests for throughput"
]
filterwarnings = [
  "error::DeprecationWarning"
]

[tool.coverage.run]
source = ["dg_core"]
branch = true

[tool.coverage.report]
omit = ["tests/*", "*/__main__.py"]

[tool.ruff]
line-length = 100
target-version = "py310"
select = ["E", "F", "B", "C4", "I"]

[tool.mypy]
python_version = "3.10"
strict = true
show_error_codes = true
ignore_missing_imports = false
warn_redundant_casts = true
warn_unused_ignores = true
plugins = ["pydantic.mypy"]